{% comment %}

  ------------------------------------------------------------------------------
  Background Image Style Tag
  More info: https://lightly-digital/docs/background-element

  Copyright 2021 Lightly Digital - support@lightly.digital
  ------------------------------------------------------------------------------

  Supports responsive background images including an overlay background filter
  with transparency

  Usage:

  Render the contents of this snippet inside the container to have a background

  {% render 'lightly-bg-image-element'
    id: { string } - required,
    bg_image_url: { string } - required,
    bg_image_url_md_up: { string } - required,
    bg_color: { string } - optional,
    bg_color_alpha: { string } - optional %}

  Parent element requires the following classes to target the element:

  - `.bg-image-{{ id }}` - Unique ID to apply color/image
  - `.ec-bg-content-wrapper` - Positions background element inside
    parent container.

{% endcomment %}
{% if bg_color_alpha == blank %}
  {% assign bg_color_alpha = 'FF' %}
{% endif %}

{% if bg_color_alpha != 'FF' %}
  {% comment %} If 100% not transparent add alpha {% endcomment %}
  {% assign bg_color_computed = bg_color | remove: '#'%}
  {% assign bg_color_computed = bg_color_computed | append: bg_color_alpha %}
  {% assign bg_color_computed = bg_color_computed | prepend: '#' %}
  {% assign bg_color_has_alpha = true %}
{% else %}
  {% assign bg_color_computed = bg_color %}
{% endif %}

{% if bg_image_url != blank or bg_image_url_md_up != blank %}
  {% unless bg_image_url contains 'no-image'%}
    {% assign bg_image_url = bg_image_url %}
  {% else %}
    {% assign bg_image_url = false %}
  {% endunless %}
  {% unless bg_image_url_md_up contains 'no-image'%}
    {% assign bg_image_url_md_up = bg_image_url_md_up %}
  {% else %}
    {% assign bg_image_url_md_up = false %}
  {% endunless %}

  {% if bg_image_url != false and bg_image_url_md_up != false %}
    {% assign bg_image = true %}
  {% else %}
    {% assign bg_image = false %}
  {% endif %}
{% endif %}


  {% comment %} Background Image {% endcomment %}

    {% if bg_image_url != blank %}
      {% assign bg_image_url = bg_image_url %}
    {% elsif bg_image_url_md_up != blank %}
      {% assign bg_image_url = bg_image_url_md_up %}
    {% endif %}

    {% if bg_image_url_md_up != blank %}
      {% assign bg_image_url_md_up = bg_image_url_md_up %}
    {% elsif bg_image_url != blank %}
      {% assign bg_image_url_md_up = bg_image_url %}
    {% endif %}
    {% if bg_image_url != blank %}
      <style>
        .{{ settings.lightly_prefix }}bg-image-{{ id }} {
          background-image: url({{ bg_image_url }});
        }
      </style>
    {% endif %}
    {% if bg_image_url_md_up != blank %}
      <style>
        @media (min-width: {{ settings.container_width_md | append: 'px' }}) {
          .{{ settings.lightly_prefix }}bg-image-{{ id }} {
            background-image: url({{ bg_image_url_md_up }});
          }
        }
      </style>
    {% endif %}

  {% if bg_color_has_alpha == true %}
    {% render 'lightly-bg-color-element' bg_color_computed: bg_color_computed %}
  {% endif %}

